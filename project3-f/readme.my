1. part1_gmm_kbest_applRH.py: appliance and RH_1. B

print(BIC)
[111913.86872533  79791.06802527  75510.6252455   74906.38306695
  74178.14285858  73912.29337801  73982.9399463   74066.74954013
  74014.61129943  74079.64566644  74097.2208668   74067.60550621
  74079.86456048  74150.91886842]

print(AIC)
[111874.41798039  79704.2763864   75376.4927127   74724.90964022
  73949.32853793  73636.13816342  73659.44383779  73695.91253769
  73596.43340306  73614.12687615  73584.36118258  73507.40492806
  73472.32308839  73496.03650241]

print(CVE)
[55945.68242098 39851.13861987 37656.76450151 37315.22354269
 37019.55314729 36772.18048021 36776.02659327 36789.42199106
 36795.88480467 36745.66086257 36722.24333116 36695.50457304
 36685.12500528 36693.11352786]
 
best according to BIC: 6
apparently we choose the one when it starts to reach nonsignifcance difference from the others.

2. part1_gmm_kbest_applTout.py: appliance, temp putside

print(BIC)
[111865.49124271  78980.461818    74380.75446238  73835.10315354
  73360.12791683  73279.91815423  73303.83924226  73321.49301401
  73445.28955514]
  

[111826.04049777  78893.67017913  74246.62192958  73653.62972681
  73131.31359617  73003.76293965  72980.34313374  72950.65601157
  73027.11165877]
  
print(CVE)
[55917.71287573 39449.59490486 37297.3544608  36819.65423064
 36509.2745021  36462.51034283 36442.49931598 36424.4675107
 36342.57086741]
 
 best, 5
 
 3. appl vs lights
 best: 6
 
 4. part1_gmm_kbest_pca.py.. pc1 and pc2
 
 print(BIC)
[120709.31899788 118175.90500781 116760.69505753 116657.87691616
 116556.231562   115971.92737254 115860.46347094 115630.38102819
 115294.32464892 115201.35332725 115133.68885056 115029.92762101
 115214.47802565 115085.32663108 114906.81844641 114803.5759715
 114816.75650496]
 
 it seems 16 for BIC
 
  5. part1_gmm_kbest_pca.py.. pca2 and pca3
 it seems 4 for BIC
 
 -----
 hierarchical
 
 1. Using other methods instead of 'single' seems to work better
 https://stats.stackexchange.com/questions/195446/choosing-the-right-linkage-method-for-hierarchical-clustering
 
 